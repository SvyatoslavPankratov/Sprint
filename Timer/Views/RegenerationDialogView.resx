<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>